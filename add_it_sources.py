#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è IT-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ MediaScope.

–î–æ–±–∞–≤–ª—è–µ—Ç —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–µ –∏ –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Ç–∏–ø–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞.
"""

import os
import sys
import django
from urllib.parse import urlparse

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from core.models import Source


# üá∑üá∫ –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–µ IT-–∏—Å—Ç–æ—á–Ω–∏–∫–∏
RUSSIAN_IT_SOURCES = [
    {
        'name': 'Habr - –ù–æ–≤–æ—Å—Ç–∏',
        'url': 'https://habr.com/ru/news/',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ IT-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –æ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
        'update_frequency': 30,
    },
    {
        'name': 'VC.ru - –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        'url': 'https://vc.ru/tech',
        'type': 'spa',  # SPA —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π
        'description': '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç VC.ru',
        'update_frequency': 60,
    },
    {
        'name': 'CNews',
        'url': 'https://cnews.ru/news/',
        'type': 'html',
        'description': '–î–µ–ª–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ IT-—Ä—ã–Ω–∫–∞ –†–æ—Å—Å–∏–∏',
        'update_frequency': 45,
    },
    {
        'name': '3DNews',
        'url': 'https://3dnews.ru/news',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∂–µ–ª–µ–∑–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        'update_frequency': 60,
    },
    {
        'name': 'iXBT',
        'url': 'https://ixbt.com/news/',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ IT, –æ–±–∑–æ—Ä—ã —Ç–µ—Ö–Ω–∏–∫–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        'update_frequency': 60,
    },
    {
        'name': 'Tproger',
        'url': 'https://tproger.ru/news',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
        'update_frequency': 120,
    },
    {
        'name': '–†–æ—Å–ö–æ–º–°–≤–æ–±–æ–¥–∞',
        'url': 'https://roskomsvoboda.org/news/',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –ø—Ä–∞–≤ –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–≤–æ–±–æ–¥—ã',
        'update_frequency': 180,
    },
    {
        'name': 'Xakep',
        'url': 'https://xakep.ru/news/',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        'update_frequency': 120,
    },
    {
        'name': 'SecurityLab',
        'url': 'https://www.securitylab.ru/news/',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
        'update_frequency': 120,
    },
    {
        'name': 'N+1',
        'url': 'https://nplus1.ru/news',
        'type': 'html',
        'description': '–ù–∞—É—á–Ω–æ-–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
        'update_frequency': 180,
    },
    {
        'name': 'Neuronus',
        'url': 'https://neuronus.com/news',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ–π—Ä–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞',
        'update_frequency': 240,
    },
    {
        'name': 'RB.ru',
        'url': 'https://rb.ru/news/',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        'update_frequency': 120,
    },
    {
        'name': 'RusBase',
        'url': 'https://rusbase.ru/news/',
        'type': 'html',
        'description': '–ù–æ–≤–æ—Å—Ç–∏ —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
        'update_frequency': 120,
    },
]

# üåç –ê–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ IT-–∏—Å—Ç–æ—á–Ω–∏–∫–∏
ENGLISH_IT_SOURCES = [
    {
        'name': 'TechCrunch',
        'url': 'https://techcrunch.com/',
        'type': 'spa',  # –°–ª–æ–∂–Ω–∞—è SPA —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
        'description': 'Leading technology media property, dedicated to obsessively profiling startups',
        'update_frequency': 30,
    },
    {
        'name': 'The Next Web',
        'url': 'https://thenextweb.com/news/',
        'type': 'spa',  # React-based SPA
        'description': 'International technology news, business & culture',
        'update_frequency': 60,
    },
    {
        'name': 'The Verge - Tech',
        'url': 'https://www.theverge.com/tech',
        'type': 'spa',  # Vox Media SPA
        'description': 'Technology news and reviews from The Verge',
        'update_frequency': 45,
    },
    {
        'name': 'Wired - Tech',
        'url': 'https://wired.com/category/tech',
        'type': 'html',
        'description': 'Technology news and analysis from Wired Magazine',
        'update_frequency': 60,
    },
    {
        'name': 'Ars Technica - IT',
        'url': 'https://arstechnica.com/information-technology/',
        'type': 'html',
        'description': 'In-depth technology news and analysis',
        'update_frequency': 90,
    },
    {
        'name': 'VentureBeat - AI',
        'url': 'https://venturebeat.com/category/ai/',
        'type': 'spa',  # WordPress + React components
        'description': 'AI and machine learning news from VentureBeat',
        'update_frequency': 120,
    },
    {
        'name': 'IEEE Spectrum - AI',
        'url': 'https://spectrum.ieee.org/artificial-intelligence',
        'type': 'html',
        'description': 'IEEE Spectrum artificial intelligence coverage',
        'update_frequency': 180,
    },
    {
        'name': 'Synced Review',
        'url': 'https://syncedreview.com/',
        'type': 'html',
        'description': 'AI research news and analysis',
        'update_frequency': 240,
    },
    {
        'name': 'Hugging Face Blog',
        'url': 'https://huggingface.co/blog',
        'type': 'spa',  # Next.js application
        'description': 'Machine learning and NLP research blog',
        'update_frequency': 360,
    },
    {
        'name': 'BleepingComputer',
        'url': 'https://www.bleepingcomputer.com/',
        'type': 'html',
        'description': 'Computer help and cybersecurity news',
        'update_frequency': 60,
    },
    {
        'name': 'CyberScoop',
        'url': 'https://www.cyberscoop.com/',
        'type': 'html',
        'description': 'Cybersecurity news and analysis',
        'update_frequency': 120,
    },
    {
        'name': 'Threatpost',
        'url': 'https://threatpost.com/',
        'type': 'html',
        'description': 'Cybersecurity news and threat intelligence',
        'update_frequency': 120,
    },
    {
        'name': 'Dev.to',
        'url': 'https://dev.to',
        'type': 'spa',  # Ruby on Rails + Preact
        'description': 'Community of software developers',
        'update_frequency': 180,
    },
    {
        'name': 'Python Insider',
        'url': 'https://pythoninsider.blogspot.com',
        'type': 'html',
        'description': 'Official Python development news',
        'update_frequency': 720,  # –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ä–µ–¥–∫–æ
    },
    {
        'name': 'Go Blog',
        'url': 'https://go.dev/blog',
        'type': 'html',
        'description': 'Official Go programming language blog',
        'update_frequency': 720,
    },
    {
        'name': 'Node.js Blog',
        'url': 'https://nodejs.org/en/blog',
        'type': 'html',
        'description': 'Official Node.js news and updates',
        'update_frequency': 720,
    },
    {
        'name': 'React Blog',
        'url': 'https://reactjs.org/blog',
        'type': 'html',
        'description': 'Official React library news and updates',
        'update_frequency': 720,
    },
]


def add_sources(sources_list, category_name):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."""
    print(f"\nüì∞ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ {category_name} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
    
    added_count = 0
    updated_count = 0
    skipped_count = 0
    
    for source_data in sources_list:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫
            source, created = Source.objects.get_or_create(
                url=source_data['url'],
                defaults=source_data
            )
            
            if created:
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {source.name}")
                added_count += 1
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫
                for key, value in source_data.items():
                    if key != 'url':  # URL –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º
                        setattr(source, key, value)
                source.save()
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω: {source.name}")
                updated_count += 1
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ {source_data['name']}: {e}")
            skipped_count += 1
    
    print(f"\nüìä {category_name} - –ò—Ç–æ–≥–æ:")
    print(f"   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: {added_count}")
    print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}")
    print(f"   ‚ùå –ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped_count}")
    
    return added_count, updated_count, skipped_count


def show_parsing_notes():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–º–µ—Ç–∫–∏ –æ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤."""
    print("\n" + "="*60)
    print("üìù –ó–ê–ú–ï–¢–ö–ò –û –ü–ê–†–°–ò–ù–ì–ï –ò–°–¢–û–ß–ù–ò–ö–û–í")
    print("="*60)
    
    print("\nüü¢ HTML –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (–≥–æ—Ç–æ–≤—ã –∫ –ø–∞—Ä—Å–∏–Ω–≥—É):")
    html_sources = [s for s in RUSSIAN_IT_SOURCES + ENGLISH_IT_SOURCES if s['type'] == 'html']
    for source in html_sources:
        print(f"   ‚Ä¢ {source['name']}")
    
    print(f"\nüü° SPA –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (—Ç—Ä–µ–±—É—é—Ç headless –ø–∞—Ä—Å–µ—Ä):")
    spa_sources = [s for s in RUSSIAN_IT_SOURCES + ENGLISH_IT_SOURCES if s['type'] == 'spa']
    for source in spa_sources:
        print(f"   ‚Ä¢ {source['name']} - {source['url']}")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è SPA –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:")
    print("   1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Playwright –∏–ª–∏ Selenium –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ JavaScript")
    print("   2. –î–æ–±–∞–≤—å—Ç–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
    print("   3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ")
    print("   4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ User-Agent –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫")
    
    print("\nüîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. –°–æ–∑–¥–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä—Å–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞")
    print("   2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∞—Å—Ç–æ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
    print("   3. –î–æ–±–∞–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞")
    print("   4. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞."""
    print("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ IT-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ MediaScope")
    print("="*50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    current_count = Source.objects.count()
    print(f"üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {current_count}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    ru_added, ru_updated, ru_skipped = add_sources(RUSSIAN_IT_SOURCES, "—Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    en_added, en_updated, en_skipped = add_sources(ENGLISH_IT_SOURCES, "–∞–Ω–≥–ª–æ—è–∑—ã—á–Ω—ã—Ö")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_added = ru_added + en_added
    total_updated = ru_updated + en_updated
    total_skipped = ru_skipped + en_skipped
    new_count = Source.objects.count()
    
    print("\n" + "="*50)
    print("üìà –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("="*50)
    print(f"üìä –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –±—ã–ª–æ: {current_count}")
    print(f"üìä –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å—Ç–∞–ª–æ: {new_count}")
    print(f"‚úÖ –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {total_added}")
    print(f"üîÑ –í—Å–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {total_updated}")
    print(f"‚ùå –í—Å–µ–≥–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: {total_skipped}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–º–µ—Ç–∫–∏ –æ –ø–∞—Ä—Å–∏–Ω–≥–µ
    show_parsing_notes()
    
    print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –î–æ–±–∞–≤–ª–µ–Ω–æ {total_added} –Ω–æ–≤—ã—Ö IT-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")


if __name__ == '__main__':
    main() 