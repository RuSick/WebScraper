"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--n$6!)_lcyb8o@v(@s-b&eb#g_z604r89o3=@*ar0%=*=dd6da'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'django_filters',
    'drf_spectacular',
    'core',
    'api',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'news_platform',  
        'USER': 'rusick',
        'PASSWORD': 'Rusick1649757',            # если peer-auth
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/


LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'Europe/Minsk'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
STATIC_ROOT = BASE_DIR / 'staticfiles'

# CORS settings (для фронтенда)
CORS_ALLOW_ALL_ORIGINS = True  # Только для разработки
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Celery configuration
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'

# =============================================================================
# REST FRAMEWORK CONFIGURATION
# =============================================================================

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Для демо - открытый доступ
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',
    'DATE_FORMAT': '%Y-%m-%d',
}

# =============================================================================
# DRF SPECTACULAR (OpenAPI/Swagger) CONFIGURATION
# =============================================================================

SPECTACULAR_SETTINGS = {
    'TITLE': 'MediaScope API',
    'DESCRIPTION': 'REST API для новостной платформы MediaScope. '
                   'Предоставляет доступ к статьям, источникам новостей, '
                   'поиску, фильтрации и аналитике.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    'COMPONENT_SPLIT_REQUEST': True,
    'SCHEMA_PATH_PREFIX': '/api/',
    'TAGS': [
        {'name': 'articles', 'description': 'Операции со статьями'},
        {'name': 'sources', 'description': 'Операции с источниками новостей'},
        {'name': 'stats', 'description': 'Статистика и аналитика'},
        {'name': 'search', 'description': 'Поиск и рекомендации'},
    ],
    'CONTACT': {
        'name': 'MediaScope Support',
        'email': 'support@mediascope.local',
    },
    'LICENSE': {
        'name': 'MIT License',
    },
    'EXTERNAL_DOCS': {
        'description': 'Документация проекта',
        'url': 'https://github.com/RuSick/WebScraper',
    },
}

# =============================================================================
# SCRAPER CONFIGURATION
# =============================================================================

# Headless browser parsing for JavaScript-heavy sites
# Включает fallback на Playwright для SPA-сайтов (Meduza.io, TJournal.ru)
ENABLE_HEADLESS_PARSING = False

# ВНИМАНИЕ: Для активации headless-парсинга требуется:
# 1. pip install playwright
# 2. playwright install
# 3. Реализация функции fetch_with_playwright() в scraper/browser/fallback_playwright.py
# 4. Установка ENABLE_HEADLESS_PARSING = True

# Headless browser timeout (seconds)
HEADLESS_TIMEOUT = 30

# Список известных SPA-сайтов будет автоматически обрабатываться через headless
# когда ENABLE_HEADLESS_PARSING = True
# Текущий список: meduza.io, tjournal.ru, vc.ru, dtf.ru

# =============================================================================
# NLP ANALYSIS CONFIGURATION
# =============================================================================

# Text analyzer selection
# Options: 'spacy' (ML-based) or 'legacy' (dictionary-based)
USE_SPACY_ANALYZER = True

# spaCy model configuration
SPACY_MODEL_NAME = 'ru_core_news_sm'

# Fallback to legacy analyzer if spaCy fails
SPACY_FALLBACK_ENABLED = True