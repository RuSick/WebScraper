#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã MediaScope
"""
import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from core.models import Source, Article
from django.db.models import Count

def main():
    print("üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã MediaScope")
    print("=" * 50)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    total_sources = Source.objects.count()
    active_sources = Source.objects.filter(is_active=True).count()
    print(f"üì∞ –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {active_sources}/{total_sources} –∞–∫—Ç–∏–≤–Ω—ã—Ö")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—Ç–∞—Ç–µ–π
    total_articles = Article.objects.count()
    active_articles = Article.objects.filter(is_active=True).count()
    analyzed_articles = Article.objects.filter(is_analyzed=True).count()
    unanalyzed_articles = Article.objects.filter(is_analyzed=False).count()
    
    print(f"üìÑ –°—Ç–∞—Ç—å–∏: {total_articles} –≤—Å–µ–≥–æ")
    print(f"   ‚îú‚îÄ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_articles}")
    print(f"   ‚îú‚îÄ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {analyzed_articles}")
    print(f"   ‚îî‚îÄ –û–∂–∏–¥–∞—é—Ç –∞–Ω–∞–ª–∏–∑–∞: {unanalyzed_articles}")
    
    # –¢–æ–ø –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç–∞—Ç–µ–π
    print("\nüèÜ –¢–æ–ø-5 –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç–∞—Ç–µ–π:")
    top_sources = Source.objects.annotate(
        article_count=Count('articles')
    ).filter(article_count__gt=0).order_by('-article_count')[:5]
    
    for i, source in enumerate(top_sources, 1):
        print(f"   {i}. {source.name}: {source.article_count} —Å—Ç–∞—Ç–µ–π")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–µ–º–∞–º
    print("\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–µ–º–∞–º:")
    topics = Article.objects.filter(is_analyzed=True).values('topic').annotate(
        count=Count('topic')
    ).order_by('-count')
    
    for topic_data in topics:
        topic_code = topic_data['topic']
        # –ü–æ–ª—É—á–∞–µ–º —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã
        topic_choices = dict(Article.TOPIC_CHOICES)
        topic_name = topic_choices.get(topic_code, topic_code)
        count = topic_data['count']
        print(f"   ‚Ä¢ {topic_name}: {count}")
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    return 0

if __name__ == "__main__":
    sys.exit(main()) 