#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç –Ω–µ–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π.

–£–¥–∞–ª—è–µ—Ç:
1. –°—Ç–∞—Ç—å–∏ —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ (—Å–ª—É–∂–µ–±–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —Å–æ—Ü—Å–µ—Ç–∏, etc.)
2. –°—Ç–∞—Ç—å–∏ —Å –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–º –∏–ª–∏ –ø—É—Å—Ç—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
3. –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —Å—Ç–∞—Ç—å–∏ –ø–æ URL

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python cleanup_articles.py [--dry-run] [--verbose]
"""

import os
import sys
import django
import re
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from core.models import Article


def cleanup_suspicious_titles(dry_run=False, verbose=False):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–µ–π —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏."""
    
    suspicious_patterns = [
        r'(—Å–≤—è–∑–∞—Ç—å—Å—è|–∫–æ–Ω—Ç–∞–∫—Ç|–ø—Ä–∞–≤–∏–ª–∞|—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è|–≥–ª–∞–≤–Ω–∞—è|–æ —Å–∞–π—Ç–µ)',
        r'(about|contact|rules|register|login|policy|main|index)',
        r'(comment|–≤–∫–æ–Ω—Ç–∞–∫—Ç–µ|facebook|twitter|instagram|youtube|telegram)',
        r'(–ø–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å|—Å–ª–µ–¥–∏—Ç–µ|—Å–º–æ—Ç—Ä–∏—Ç–µ|–ø–æ–¥–µ–ª–∏—Ç—å—Å—è)',
        r'(—Ä–µ–∫–ª–∞–º–∞|advertisement|ads|—Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã)',
        r'(–ø–æ–º–æ—â—å|help|support|–ø–æ–¥–¥–µ—Ä–∂–∫–∞|faq)',
        r'(404|error|–æ—à–∏–±–∫–∞|—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)',
        r'(loading|–∑–∞–≥—Ä—É–∑–∫–∞|–ø–æ–¥–æ–∂–¥–∏—Ç–µ|maintenance)',
        r'(cookie|–∫—É–∫–∏|—Å–æ–≥–ª–∞—Å–∏–µ|gdpr|privacy)',
        r'^(–º–µ–Ω—é|menu|–Ω–∞–≤–∏–≥–∞—Ü–∏—è|navigation|–ø–æ–∏—Å–∫|search)$',
        r'^(undefined|null|none|empty|blank|test|—Ç–µ—Å—Ç|demo|–¥–µ–º–æ)$',
    ]
    
    pattern = '|'.join(f'({p})' for p in suspicious_patterns)
    
    suspicious_articles = Article.objects.filter(
        title__iregex=pattern
    )
    
    count = suspicious_articles.count()
    
    if verbose:
        print(f"–ù–∞–π–¥–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏:")
        for article in suspicious_articles[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"  - {article.title[:60]}... (ID: {article.id})")
        if count > 10:
            print(f"  ... –∏ –µ—â—ë {count - 10} —Å—Ç–∞—Ç–µ–π")
    
    if not dry_run and count > 0:
        suspicious_articles.delete()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏")
    elif dry_run:
        print(f"üîç [DRY RUN] –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏")
    
    return count


def cleanup_short_content(dry_run=False, verbose=False, min_length=100):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–µ–π —Å –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º."""
    
    short_articles = Article.objects.filter(
        content__isnull=False
    ).extra(
        where=[f'LENGTH(content) < {min_length}']
    )
    
    count = short_articles.count()
    
    if verbose:
        print(f"–ù–∞–π–¥–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∫–æ—Ä–æ—á–µ {min_length} —Å–∏–º–≤–æ–ª–æ–≤:")
        for article in short_articles[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            content_len = len(article.content) if article.content else 0
            print(f"  - {article.title[:50]}... ({content_len} —Å–∏–º–≤–æ–ª–æ–≤)")
        if count > 5:
            print(f"  ... –∏ –µ—â—ë {count - 5} —Å—Ç–∞—Ç–µ–π")
    
    if not dry_run and count > 0:
        short_articles.delete()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
    elif dry_run:
        print(f"üîç [DRY RUN] –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
    
    return count


def cleanup_empty_content(dry_run=False, verbose=False):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–µ–π —Å –ø—É—Å—Ç—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏ –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º."""
    
    empty_articles = Article.objects.filter(
        content__isnull=True
    ).extra(
        where=['LENGTH(title) < 15']
    ).union(
        Article.objects.filter(
            content__exact=''
        ).extra(
            where=['LENGTH(title) < 15']
        )
    )
    
    count = empty_articles.count()
    
    if verbose:
        print(f"–ù–∞–π–¥–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –ø—É—Å—Ç—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∏ –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º:")
        for article in empty_articles[:5]:
            print(f"  - {article.title[:50]}... (ID: {article.id})")
        if count > 5:
            print(f"  ... –∏ –µ—â—ë {count - 5} —Å—Ç–∞—Ç–µ–π")
    
    if not dry_run and count > 0:
        empty_articles.delete()
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –ø—É—Å—Ç—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
    elif dry_run:
        print(f"üîç [DRY RUN] –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ {count} —Å—Ç–∞—Ç–µ–π —Å –ø—É—Å—Ç—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º")
    
    return count


def cleanup_duplicate_urls(dry_run=False, verbose=False):
    """–£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Å—Ç–∞—Ç–µ–π –ø–æ URL."""
    
    # –ù–∞—Ö–æ–¥–∏–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è URL
    from django.db.models import Count
    
    duplicate_urls = Article.objects.values('url').annotate(
        count=Count('url')
    ).filter(count__gt=1)
    
    total_duplicates = 0
    
    for dup in duplicate_urls:
        url = dup['url']
        articles = Article.objects.filter(url=url).order_by('created_at')
        
        # –û—Å—Ç–∞–≤–ª—è–µ–º —Å–∞–º—É—é —Å—Ç–∞—Ä—É—é —Å—Ç–∞—Ç—å—é, —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
        duplicates_to_delete = articles[1:]
        count = duplicates_to_delete.count()
        total_duplicates += count
        
        if verbose and count > 0:
            print(f"URL {url}: –Ω–∞–π–¥–µ–Ω–æ {count + 1} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤, —É–¥–∞–ª—è–µ–º {count}")
        
        if not dry_run and count > 0:
            duplicates_to_delete.delete()
    
    if total_duplicates > 0:
        if not dry_run:
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {total_duplicates} –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Å—Ç–∞—Ç–µ–π")
        else:
            print(f"üîç [DRY RUN] –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ {total_duplicates} –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Å—Ç–∞—Ç–µ–π")
    
    return total_duplicates


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏."""
    
    import argparse
    
    parser = argparse.ArgumentParser(description='–û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç –Ω–µ–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π')
    parser.add_argument('--dry-run', action='store_true', 
                       help='–ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ, –Ω–æ –Ω–µ —É–¥–∞–ª—è—Ç—å')
    parser.add_argument('--verbose', '-v', action='store_true',
                       help='–ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥')
    parser.add_argument('--min-content-length', type=int, default=100,
                       help='–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 100)')
    
    args = parser.parse_args()
    
    print(f"üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç –Ω–µ–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    if args.dry_run:
        print("üîç –†–µ–∂–∏–º DRY RUN - –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    print()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ –æ—á–∏—Å—Ç–∫–∏
    total_before = Article.objects.count()
    print(f"üìä –°—Ç–∞—Ç–µ–π –≤ –±–∞–∑–µ –¥–æ –æ—á–∏—Å—Ç–∫–∏: {total_before}")
    print()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
    deleted_suspicious = cleanup_suspicious_titles(args.dry_run, args.verbose)
    print()
    
    deleted_short = cleanup_short_content(args.dry_run, args.verbose, args.min_content_length)
    print()
    
    deleted_empty = cleanup_empty_content(args.dry_run, args.verbose)
    print()
    
    deleted_duplicates = cleanup_duplicate_urls(args.dry_run, args.verbose)
    print()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    if not args.dry_run:
        total_after = Article.objects.count()
        total_deleted = deleted_suspicious + deleted_short + deleted_empty + deleted_duplicates
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏:")
        print(f"  –°—Ç–∞—Ç–µ–π –¥–æ –æ—á–∏—Å—Ç–∫–∏: {total_before}")
        print(f"  –°—Ç–∞—Ç–µ–π –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: {total_after}")
        print(f"  –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ: {total_deleted}")
        print(f"  –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏: {deleted_suspicious}")
        print(f"  –ö–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç: {deleted_short}")
        print(f"  –ü—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç: {deleted_empty}")
        print(f"  –î—É–±–ª–∏–∫–∞—Ç—ã: {deleted_duplicates}")
        
        if total_deleted > 0:
            print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print(f"‚ÑπÔ∏è  –°—Ç–∞—Ç–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    else:
        total_to_delete = deleted_suspicious + deleted_short + deleted_empty + deleted_duplicates
        print(f"üîç [DRY RUN] –í—Å–µ–≥–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ: {total_to_delete} —Å—Ç–∞—Ç–µ–π")


if __name__ == '__main__':
    main() 