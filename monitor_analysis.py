#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–µ–π
"""

import os
import sys
import django
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from core.models import Article


def monitor_analysis_progress():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–µ–π."""
    
    print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–µ–π")
    print("=" * 40)
    
    start_time = time.time()
    
    while True:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total = Article.objects.count()
        analyzed = Article.objects.filter(is_analyzed=True).count()
        unanalyzed = total - analyzed
        progress = (analyzed / total * 100) if total > 0 else 0
        
        # –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å
        elapsed = time.time() - start_time
        if elapsed > 0 and analyzed > 0:
            rate = analyzed / elapsed * 60  # —Å—Ç–∞—Ç–µ–π –≤ –º–∏–Ω—É—Ç—É
            eta_minutes = unanalyzed / (rate / 60) if rate > 0 else 0
        else:
            rate = 0
            eta_minutes = 0
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        current_time = datetime.now().strftime("%H:%M:%S")
        print(f"\r[{current_time}] üìà {analyzed}/{total} ({progress:.1f}%) | "
              f"‚è≥ –û—Å—Ç–∞–ª–æ—Å—å: {unanalyzed} | üöÄ –°–∫–æ—Ä–æ—Å—Ç—å: {rate:.1f}/–º–∏–Ω | "
              f"‚è±Ô∏è ETA: {eta_minutes:.0f}–º–∏–Ω", end="", flush=True)
        
        # –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ - –∑–∞–≤–µ—Ä—à–∞–µ–º
        if unanalyzed == 0:
            print(f"\n\nüéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –í—Å–µ {total} —Å—Ç–∞—Ç–µ–π –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
            break
        
        time.sleep(5)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥


if __name__ == "__main__":
    try:
        monitor_analysis_progress()
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n\n‚ùå –û—à–∏–±–∫–∞: {e}") 